openapi: 3.0.3
info:
  title: Online Lessons
  version: 1.0.0
tags:
  - name: Students
    description: Students management
  - name: Courses
    description: Course management 
  - name: JoinRequest
paths:
  /Courses:
    get: 
      tags:
        - Courses
      summary: Get all Courses
      operationId: getCourses
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Course'
        '400':
          description: Bad Request  
        '401':
          description: No Permission          
      security:
        - teacher_auth:
          - teacher
    post:
      tags:
        - Courses
      summary: Add an Course
      operationId: createCourse
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Course'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
        '400':
          description: Bad Request  
        '401':
          description: No Permission
      security:
        - teacher_auth:
          - teacher
  /Courses/{CourseId}:
    parameters:
      - name: CourseId
        in: path
        description: The id of the Course
        required: true
        schema:
          type: integer  
    get:
      tags:
        - Courses
      summary: Get a Course
      operationId: getCourse
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
        '404':
          description: Not Found
      security:
        - teacher_auth:
          - teacher
    put:
      tags:
        - Courses
      summary: Edit Course data
      operationId: editCourse
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
        '400':
          description: Bad Request
        '401':
          description: No Permission
      security:
        - teacher_auth:
          - teacher
    delete:
      tags:
        - Courses
      summary: Delete a Course
      operationId: deleteCourse
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
        '401':
          description: No Permission
      security:
        - teacher_auth:
          - teacher
  /Courses/addStudent/{CourseId}:
    post: 
      parameters:
      - name: CourseId
        in: path
        description: The id of the Course
        required: true
        schema:
          type: integer
      - name: StudentId
        in: query
        description: Name of pet that needs to be updated
        required: true
        schema:
          type: integer
      tags:
        - Courses
      summary: Add a Student to a Course
      operationId: addStudentToCourse
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
        '400':
          description: Bad Request
        '401':
          description: No Permission
      security:
        - teacher_auth:
          - teacher 
  /Courses/{courseId}:
    get:
      tags:
       - Students
      summary: Get all Students on Course
      operationId: getStudents
      parameters:
        - name: courseId
          in: path
          description: ID of Course 
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'          
        '400':
          description: Invalid ID supplied
      security:
        - teacher_auth:
          - teacher
  
  /Students:
    get:
      tags:
        - Students
      summary: Get all Students
      operationId: getAllStudents
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'
        '400':
          description: Bad Request 
        '401':
          description: No Permission
      security:
        - teacher_auth:
          - teacher          
    post:
      tags:
        - Students
      summary: Create a Student
      operationId: createStudent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
        '400':
          description: Bad Request 
        '401':
          description: No Permission
      security:
        - teacher_auth:
          - teacher
  /Students/{StudentId}:
    parameters:
      - name: StudentId
        in: path
        description: The id of the Student
        required: true
        schema:
          type: integer
    get:
      tags:
        - Students
      summary: Get a Student
      operationId: getStudent
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
        '404':
          description: Not Found
      security:
        - teacher_auth:
          - teacher
    put: 
      tags:
        - Students
      summary: Edit Student data
      operationId: editStudent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
        '400':
          description: Bad Request
        '401':
          description: No Permission
      security:
        - teacher_auth:
          - teacher
    delete: 
        tags:
          - Students
        summary: Delete a Student
        operationId: deleteStudent
        responses:
          '204':
            description: No Content
          '404':
            description: Not Found
          '401':
            description: No Permission
        security:
          - teacher_auth:
            - teacher
  /Courses/join/{CourseId}:
    parameters:
      - name: CourseId
        in: path
        description: The id of the Course
        required: true
        schema:
          type: integer
    get: 
      tags:
        - Courses
      summary: send a request to join a course
      operationId: sendRequest
      responses:
        '200':
          description: Successful
        '400':
          description: Bad Request
        '401':
          description: No Permission
      security:
        - student_auth:
          - student
  /JoinRequest/accept/{requestId}:
    parameters:
      - name: requestId
        in: path
        description: The id of the request
        required: true
        schema:
          type: integer
    put:
      tags:
        - JoinRequest
      operationId: acceptRequest
      requestBody:
        description: Accept student to course
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JoinRequest'
      responses:
        '200':
          description: Successful
        '401':
          description: No Permission
        '404':
          description: Not found
      security:
        - teacher_auth:
          - teacher
components:
  schemas:
    
    Course:
      type: object
      properties:
        name:
          type: string
          example: Programming
        credits:
          type: integer
          example: 10
        url:
          type: string
          example: example.com
        teacher_id:
          type: integer
          example: 15
    Student:
      type: object
      properties:
        first_name:
          type: string
          example: John
        second_name:
          type: string
          example: Doe
        email:
          type: string
          example: test@example.com
        password:
          type: string
          example: password1234
    Teacher:
      type: object
      properties:
        first_name:
          type: string
          example: John
        second_name:
          type: string
          example: Doe
        email:
          type: string
          example: test@example.com
        password:
          type: string
          example: password1234
    JoinRequest:
      type: object
      properties:
        status:
          type: string 
          enum:
           - accepted
           - denied
           - unprocessed
        student_id:
          type: integer
          example: 10
        course_id:
          type: integer
          example: 15
  securitySchemes:            
    teacher_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://vns.lpnu.ua/
          scopes:
            teacher: Teacher rights
    student_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://vns.lpnu.ua/students/
          scopes:
            student: Student rights
      
    